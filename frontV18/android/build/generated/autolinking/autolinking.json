{
  "root": "/home/praveen/task/Trust_Fresh",
  "reactNativePath": "/home/praveen/task/Trust_Fresh/node_modules/react-native",
  "reactNativeVersion": "0.78",
  "dependencies": {
    "@notifee/react-native": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/@notifee/react-native",
      "name": "@notifee/react-native",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/@notifee/react-native/RNNotifee.podspec",
          "version": "9.1.8",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/@notifee/react-native/android",
          "packageImportPath": "import io.invertase.notifee.NotifeePackage;",
          "packageInstance": "new NotifeePackage()",
          "buildTypes": [],
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/@notifee/react-native/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "@react-native-async-storage/async-storage": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/@react-native-async-storage/async-storage",
      "name": "@react-native-async-storage/async-storage",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/@react-native-async-storage/async-storage/RNCAsyncStorage.podspec",
          "version": "2.1.2",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/@react-native-async-storage/async-storage/android",
          "packageImportPath": "import com.reactnativecommunity.asyncstorage.AsyncStoragePackage;",
          "packageInstance": "new AsyncStoragePackage()",
          "buildTypes": [],
          "libraryName": "rnasyncstorage",
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "@react-native-clipboard/clipboard": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/@react-native-clipboard/clipboard",
      "name": "@react-native-clipboard/clipboard",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/@react-native-clipboard/clipboard/RNCClipboard.podspec",
          "version": "1.16.2",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/@react-native-clipboard/clipboard/android",
          "packageImportPath": "import com.reactnativecommunity.clipboard.ClipboardPackage;",
          "packageInstance": "new ClipboardPackage()",
          "buildTypes": [],
          "libraryName": "rnclipboard",
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/@react-native-clipboard/clipboard/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "@react-native-community/checkbox": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/@react-native-community/checkbox",
      "name": "@react-native-community/checkbox",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/@react-native-community/checkbox/RNCCheckbox.podspec",
          "version": "0.5.17",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/@react-native-community/checkbox/android",
          "packageImportPath": "import com.reactnativecommunity.checkbox.ReactCheckBoxPackage;",
          "packageInstance": "new ReactCheckBoxPackage()",
          "buildTypes": [],
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/@react-native-community/checkbox/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "@react-native-documents/picker": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/@react-native-documents/picker",
      "name": "@react-native-documents/picker",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/@react-native-documents/picker/react-native-document-picker.podspec",
          "version": "10.1.2",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/@react-native-documents/picker/android",
          "packageImportPath": "import com.reactnativedocumentpicker.RNDocumentPickerPackage;",
          "packageInstance": "new RNDocumentPickerPackage()",
          "buildTypes": [],
          "libraryName": "rndocumentpickerCGen",
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/@react-native-documents/picker/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "@walletconnect/react-native-compat": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/@walletconnect/react-native-compat",
      "name": "@walletconnect/react-native-compat",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/@walletconnect/react-native-compat/react-native-compat.podspec",
          "version": "2.19.4",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/@walletconnect/react-native-compat/android",
          "packageImportPath": "import com.walletconnect.reactnativemodule.RNWalletConnectModulePackage;",
          "packageInstance": "new RNWalletConnectModulePackage()",
          "buildTypes": [],
          "libraryName": "RNRNWalletConnectModuleSpec",
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/@walletconnect/react-native-compat/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "lottie-react-native": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/lottie-react-native",
      "name": "lottie-react-native",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/lottie-react-native/lottie-react-native.podspec",
          "version": "7.2.2",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/lottie-react-native/android",
          "packageImportPath": "import com.airbnb.android.react.lottie.LottiePackage;",
          "packageInstance": "new LottiePackage()",
          "buildTypes": [],
          "libraryName": "lottiereactnative",
          "componentDescriptors": [
            "LottieAnimationViewComponentDescriptor"
          ],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/lottie-react-native/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-biometrics": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-biometrics",
      "name": "react-native-biometrics",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-biometrics/react-native-biometrics.podspec",
          "version": "3.0.1",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-biometrics/android",
          "packageImportPath": "import com.rnbiometrics.ReactNativeBiometricsPackage;",
          "packageInstance": "new ReactNativeBiometricsPackage()",
          "buildTypes": [],
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-biometrics/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-blob-util": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-blob-util",
      "name": "react-native-blob-util",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-blob-util/react-native-blob-util.podspec",
          "version": "0.21.2",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-blob-util/android",
          "packageImportPath": "import com.ReactNativeBlobUtil.ReactNativeBlobUtilPackage;",
          "packageInstance": "new ReactNativeBlobUtilPackage()",
          "buildTypes": [],
          "libraryName": "ReactNativeBlobUtilSpec",
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-blob-util/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-device-info": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-device-info",
      "name": "react-native-device-info",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-device-info/RNDeviceInfo.podspec",
          "version": "14.0.4",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-device-info/android",
          "packageImportPath": "import com.learnium.RNDeviceInfo.RNDeviceInfo;",
          "packageInstance": "new RNDeviceInfo()",
          "buildTypes": [],
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-device-info/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-encrypted-storage": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-encrypted-storage",
      "name": "react-native-encrypted-storage",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-encrypted-storage/react-native-encrypted-storage.podspec",
          "version": "4.0.3",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-encrypted-storage/android",
          "packageImportPath": "import com.emeraldsanto.encryptedstorage.RNEncryptedStoragePackage;",
          "packageInstance": "new RNEncryptedStoragePackage()",
          "buildTypes": [],
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-encrypted-storage/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-extra-dimensions-android": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-extra-dimensions-android",
      "name": "react-native-extra-dimensions-android",
      "platforms": {
        "ios": null,
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-extra-dimensions-android/android",
          "packageImportPath": "import ca.jaysoo.extradimensions.ExtraDimensionsPackage;",
          "packageInstance": "new ExtraDimensionsPackage()",
          "buildTypes": [],
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-extra-dimensions-android/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-fs": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-fs",
      "name": "react-native-fs",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-fs/RNFS.podspec",
          "version": "2.20.0",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-fs/android",
          "packageImportPath": "import com.rnfs.RNFSPackage;",
          "packageInstance": "new RNFSPackage()",
          "buildTypes": [],
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-fs/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-gesture-handler": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-gesture-handler",
      "name": "react-native-gesture-handler",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-gesture-handler/RNGestureHandler.podspec",
          "version": "2.25.0",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-gesture-handler/android",
          "packageImportPath": "import com.swmansion.gesturehandler.RNGestureHandlerPackage;",
          "packageInstance": "new RNGestureHandlerPackage()",
          "buildTypes": [],
          "libraryName": "rngesturehandler_codegen",
          "componentDescriptors": [
            "RNGestureHandlerButtonComponentDescriptor",
            "RNGestureHandlerRootViewComponentDescriptor"
          ],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-get-random-values": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-get-random-values",
      "name": "react-native-get-random-values",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-get-random-values/react-native-get-random-values.podspec",
          "version": "1.11.0",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-get-random-values/android",
          "packageImportPath": "import org.linusu.RNGetRandomValuesPackage;",
          "packageInstance": "new RNGetRandomValuesPackage()",
          "buildTypes": [],
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-get-random-values/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-linear-gradient": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-linear-gradient",
      "name": "react-native-linear-gradient",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-linear-gradient/BVLinearGradient.podspec",
          "version": "2.8.3",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-linear-gradient/android",
          "packageImportPath": "import com.BV.LinearGradient.LinearGradientPackage;",
          "packageInstance": "new LinearGradientPackage()",
          "buildTypes": [],
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-linear-gradient/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-mmkv": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-mmkv",
      "name": "react-native-mmkv",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-mmkv/react-native-mmkv.podspec",
          "version": "3.2.0",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-mmkv/android",
          "packageImportPath": "import com.mrousavy.mmkv.MmkvPackage;",
          "packageInstance": "new MmkvPackage()",
          "buildTypes": [],
          "libraryName": "RNMmkvSpec",
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-mmkv/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": "react-native-mmkv",
          "cxxModuleCMakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-mmkv/android/CMakeLists.txt",
          "cxxModuleHeaderName": "NativeMmkvModule",
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-os": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-os",
      "name": "react-native-os",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-os/RNOS.podspec",
          "version": "1.2.6",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-os/android",
          "packageImportPath": "import com.peel.react.rnos.RNOSModule;",
          "packageInstance": "new RNOSModule()",
          "buildTypes": [],
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-os/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-permissions": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-permissions",
      "name": "react-native-permissions",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-permissions/RNPermissions.podspec",
          "version": "5.3.0",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-permissions/android",
          "packageImportPath": "import com.zoontek.rnpermissions.RNPermissionsPackage;",
          "packageInstance": "new RNPermissionsPackage()",
          "buildTypes": [],
          "libraryName": "RNPermissionsSpec",
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-permissions/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-quick-crypto": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-quick-crypto",
      "name": "react-native-quick-crypto",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-quick-crypto/react-native-quick-crypto.podspec",
          "version": "0.7.13",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-quick-crypto/android",
          "packageImportPath": "import com.margelo.quickcrypto.QuickCryptoPackage;",
          "packageInstance": "new QuickCryptoPackage()",
          "buildTypes": [],
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-quick-crypto/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-randombytes": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-randombytes",
      "name": "react-native-randombytes",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-randombytes/react-native-randombytes.podspec",
          "version": "3.6.1",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-randombytes/android",
          "packageImportPath": "import com.bitgo.randombytes.RandomBytesPackage;",
          "packageInstance": "new RandomBytesPackage()",
          "buildTypes": [],
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-randombytes/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-render-html": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-render-html",
      "name": "react-native-render-html",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-render-html/react-native-render-html.podspec",
          "version": "6.3.4",
          "configurations": [],
          "scriptPhases": []
        },
        "android": null
      }
    },
    "react-native-safe-area-context": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-safe-area-context",
      "name": "react-native-safe-area-context",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-safe-area-context/react-native-safe-area-context.podspec",
          "version": "5.4.0",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-safe-area-context/android",
          "packageImportPath": "import com.th3rdwave.safeareacontext.SafeAreaContextPackage;",
          "packageInstance": "new SafeAreaContextPackage()",
          "buildTypes": [],
          "libraryName": "safeareacontext",
          "componentDescriptors": [
            "RNCSafeAreaProviderComponentDescriptor",
            "RNCSafeAreaViewComponentDescriptor"
          ],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-safe-area-context/android/src/main/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-screens": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-screens",
      "name": "react-native-screens",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-screens/RNScreens.podspec",
          "version": "4.10.0",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-screens/android",
          "packageImportPath": "import com.swmansion.rnscreens.RNScreensPackage;",
          "packageInstance": "new RNScreensPackage()",
          "buildTypes": [],
          "libraryName": "rnscreens",
          "componentDescriptors": [
            "RNSFullWindowOverlayComponentDescriptor",
            "RNSScreenContainerComponentDescriptor",
            "RNSScreenNavigationContainerComponentDescriptor",
            "RNSScreenStackHeaderConfigComponentDescriptor",
            "RNSScreenStackHeaderSubviewComponentDescriptor",
            "RNSScreenStackComponentDescriptor",
            "RNSSearchBarComponentDescriptor",
            "RNSScreenComponentDescriptor",
            "RNSScreenFooterComponentDescriptor",
            "RNSScreenContentWrapperComponentDescriptor",
            "RNSModalScreenComponentDescriptor"
          ],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-screens/android/src/main/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-share": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-share",
      "name": "react-native-share",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-share/RNShare.podspec",
          "version": "12.0.9",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-share/android",
          "packageImportPath": "import cl.json.RNSharePackage;",
          "packageInstance": "new RNSharePackage()",
          "buildTypes": [],
          "libraryName": "RNShareSpec",
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-share/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-simple-toast": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-simple-toast",
      "name": "react-native-simple-toast",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-simple-toast/react-native-simple-toast.podspec",
          "version": "3.3.2",
          "configurations": [],
          "scriptPhases": []
        },
        "android": null
      }
    },
    "react-native-svg": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-svg",
      "name": "react-native-svg",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-svg/RNSVG.podspec",
          "version": "15.11.2",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-svg/android",
          "packageImportPath": "import com.horcrux.svg.SvgPackage;",
          "packageInstance": "new SvgPackage()",
          "buildTypes": [],
          "libraryName": "rnsvg",
          "componentDescriptors": [
            "RNSVGCircleComponentDescriptor",
            "RNSVGClipPathComponentDescriptor",
            "RNSVGDefsComponentDescriptor",
            "RNSVGFeBlendComponentDescriptor",
            "RNSVGFeColorMatrixComponentDescriptor",
            "RNSVGFeCompositeComponentDescriptor",
            "RNSVGFeFloodComponentDescriptor",
            "RNSVGFeGaussianBlurComponentDescriptor",
            "RNSVGFeMergeComponentDescriptor",
            "RNSVGFeOffsetComponentDescriptor",
            "RNSVGFilterComponentDescriptor",
            "RNSVGEllipseComponentDescriptor",
            "RNSVGForeignObjectComponentDescriptor",
            "RNSVGGroupComponentDescriptor",
            "RNSVGImageComponentDescriptor",
            "RNSVGLinearGradientComponentDescriptor",
            "RNSVGLineComponentDescriptor",
            "RNSVGMarkerComponentDescriptor",
            "RNSVGMaskComponentDescriptor",
            "RNSVGPathComponentDescriptor",
            "RNSVGPatternComponentDescriptor",
            "RNSVGRadialGradientComponentDescriptor",
            "RNSVGRectComponentDescriptor",
            "RNSVGSvgViewAndroidComponentDescriptor",
            "RNSVGSymbolComponentDescriptor",
            "RNSVGTextComponentDescriptor",
            "RNSVGTextPathComponentDescriptor",
            "RNSVGTSpanComponentDescriptor",
            "RNSVGUseComponentDescriptor"
          ],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-svg/android/src/main/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-tcp": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-tcp",
      "name": "react-native-tcp",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-tcp/TcpSockets.podspec",
          "version": "4.0.0",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-tcp/android",
          "packageImportPath": "import com.peel.react.TcpSocketsModule;",
          "packageInstance": "new TcpSocketsModule()",
          "buildTypes": [],
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-tcp/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-vector-icons": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-vector-icons",
      "name": "react-native-vector-icons",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-vector-icons/RNVectorIcons.podspec",
          "version": "10.2.0",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-vector-icons/android",
          "packageImportPath": "import com.oblador.vectoricons.VectorIconsPackage;",
          "packageInstance": "new VectorIconsPackage()",
          "buildTypes": [],
          "libraryName": "RNVectorIconsSpec",
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-vector-icons/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-vision-camera": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-vision-camera",
      "name": "react-native-vision-camera",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-vision-camera/VisionCamera.podspec",
          "version": "4.6.4",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-vision-camera/android",
          "packageImportPath": "import com.mrousavy.camera.react.CameraPackage;",
          "packageInstance": "new CameraPackage()",
          "buildTypes": [],
          "componentDescriptors": [],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-vision-camera/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    },
    "react-native-webview": {
      "root": "/home/praveen/task/Trust_Fresh/node_modules/react-native-webview",
      "name": "react-native-webview",
      "platforms": {
        "ios": {
          "podspecPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-webview/react-native-webview.podspec",
          "version": "13.13.5",
          "configurations": [],
          "scriptPhases": []
        },
        "android": {
          "sourceDir": "/home/praveen/task/Trust_Fresh/node_modules/react-native-webview/android",
          "packageImportPath": "import com.reactnativecommunity.webview.RNCWebViewPackage;",
          "packageInstance": "new RNCWebViewPackage()",
          "buildTypes": [],
          "libraryName": "RNCWebViewSpec",
          "componentDescriptors": [
            "RNCWebViewComponentDescriptor"
          ],
          "cmakeListsPath": "/home/praveen/task/Trust_Fresh/node_modules/react-native-webview/android/build/generated/source/codegen/jni/CMakeLists.txt",
          "cxxModuleCMakeListsModuleName": null,
          "cxxModuleCMakeListsPath": null,
          "cxxModuleHeaderName": null,
          "isPureCxxDependency": false
        }
      }
    }
  },
  "commands": [
    {
      "name": "bundle",
      "description": "Build the bundle for the provided JavaScript entry file.",
      "options": [
        {
          "name": "--entry-file <path>",
          "description": "Path to the root JS file, either absolute or relative to JS root"
        },
        {
          "name": "--platform <string>",
          "description": "Either \"ios\" or \"android\"",
          "default": "ios"
        },
        {
          "name": "--transformer <string>",
          "description": "Specify a custom transformer to be used"
        },
        {
          "name": "--dev [boolean]",
          "description": "If false, warnings are disabled and the bundle is minified",
          "default": true
        },
        {
          "name": "--minify [boolean]",
          "description": "Allows overriding whether bundle is minified. This defaults to false if dev is true, and true if dev is false. Disabling minification can be useful for speeding up production builds for testing purposes."
        },
        {
          "name": "--bundle-output <string>",
          "description": "File name where to store the resulting bundle, ex. /tmp/groups.bundle"
        },
        {
          "name": "--bundle-encoding <string>",
          "description": "Encoding the bundle should be written in (https://nodejs.org/api/buffer.html#buffer_buffer).",
          "default": "utf8"
        },
        {
          "name": "--max-workers <number>",
          "description": "Specifies the maximum number of workers the worker-pool will spawn for transforming files. This defaults to the number of the cores available on your machine."
        },
        {
          "name": "--sourcemap-output <string>",
          "description": "File name where to store the sourcemap file for resulting bundle, ex. /tmp/groups.map"
        },
        {
          "name": "--sourcemap-sources-root <string>",
          "description": "Path to make sourcemap's sources entries relative to, ex. /root/dir"
        },
        {
          "name": "--sourcemap-use-absolute-path",
          "description": "Report SourceMapURL using its full path",
          "default": false
        },
        {
          "name": "--assets-dest <string>",
          "description": "Directory name where to store assets referenced in the bundle"
        },
        {
          "name": "--unstable-transform-profile <string>",
          "description": "Experimental, transform JS for a specific JS engine. Currently supported: hermes, hermes-canary, default",
          "default": "default"
        },
        {
          "name": "--asset-catalog-dest [string]",
          "description": "Path where to create an iOS Asset Catalog for images"
        },
        {
          "name": "--reset-cache",
          "description": "Removes cached files",
          "default": false
        },
        {
          "name": "--read-global-cache",
          "description": "Try to fetch transformed JS code from the global cache, if configured.",
          "default": false
        },
        {
          "name": "--config <string>",
          "description": "Path to the CLI configuration file"
        },
        {
          "name": "--resolver-option <string...>",
          "description": "Custom resolver options of the form key=value. URL-encoded. May be specified multiple times."
        }
      ]
    },
    {
      "name": "start",
      "description": "Start the React Native development server.",
      "options": [
        {
          "name": "--port <number>"
        },
        {
          "name": "--host <string>",
          "default": ""
        },
        {
          "name": "--projectRoot <path>",
          "description": "Path to a custom project root"
        },
        {
          "name": "--watchFolders <list>",
          "description": "Specify any additional folders to be added to the watch list"
        },
        {
          "name": "--assetPlugins <list>",
          "description": "Specify any additional asset plugins to be used by the packager by full filepath"
        },
        {
          "name": "--sourceExts <list>",
          "description": "Specify any additional source extensions to be used by the packager"
        },
        {
          "name": "--max-workers <number>",
          "description": "Specifies the maximum number of workers the worker-pool will spawn for transforming files. This defaults to the number of the cores available on your machine."
        },
        {
          "name": "--transformer <string>",
          "description": "Specify a custom transformer to be used"
        },
        {
          "name": "--reset-cache, --resetCache",
          "description": "Removes cached files"
        },
        {
          "name": "--custom-log-reporter-path, --customLogReporterPath <string>",
          "description": "Path to a JavaScript file that exports a log reporter as a replacement for TerminalReporter"
        },
        {
          "name": "--https",
          "description": "Enables https connections to the server"
        },
        {
          "name": "--key <path>",
          "description": "Path to custom SSL key"
        },
        {
          "name": "--cert <path>",
          "description": "Path to custom SSL cert"
        },
        {
          "name": "--config <string>",
          "description": "Path to the CLI configuration file"
        },
        {
          "name": "--no-interactive",
          "description": "Disables interactive mode"
        },
        {
          "name": "--client-logs",
          "description": "[Deprecated] Enable plain text JavaScript log streaming for all connected apps. This feature is deprecated and will be removed in future.",
          "default": false
        }
      ]
    },
    {
      "name": "codegen",
      "options": [
        {
          "name": "--path <path>",
          "description": "Path to the React Native project root.",
          "default": "/home/praveen/task/Trust_Fresh"
        },
        {
          "name": "--platform <string>",
          "description": "Target platform. Supported values: \"android\", \"ios\", \"all\".",
          "default": "all"
        },
        {
          "name": "--outputPath <path>",
          "description": "Path where generated artifacts will be output to."
        },
        {
          "name": "--source <string>",
          "description": "Whether the script is invoked from an `app` or a `library`",
          "default": "app"
        }
      ]
    },
    {
      "name": "log-ios",
      "description": "starts iOS device syslog tail",
      "options": [
        {
          "name": "-i --interactive",
          "description": "Explicitly select simulator to tail logs from. By default it will tail logs from the first booted and available simulator."
        }
      ]
    },
    {
      "name": "run-ios",
      "description": "builds your app and starts it on iOS simulator",
      "examples": [
        {
          "desc": "Run on a different simulator, e.g. iPhone SE (2nd generation)",
          "cmd": "npx react-native run-ios --simulator \"iPhone SE (2nd generation)\""
        },
        {
          "desc": "Run on a connected device, e.g. Max's iPhone",
          "cmd": "npx react-native run-ios --device \"Max's iPhone\""
        },
        {
          "desc": "Run on the AppleTV simulator",
          "cmd": "npx react-native run-ios --simulator \"Apple TV\"  --scheme \"helloworld-tvOS\""
        }
      ],
      "options": [
        {
          "name": "--no-packager",
          "description": "Do not launch packager while running the app"
        },
        {
          "name": "--port <number>",
          "default": 8081
        },
        {
          "name": "--terminal <string>",
          "description": "Launches the Metro Bundler in a new window using the specified terminal path.",
          "default": "xterm-256color"
        },
        {
          "name": "--binary-path <string>",
          "description": "Path relative to project root where pre-built .app binary lives."
        },
        {
          "name": "--list-devices",
          "description": "List all available iOS devices and simulators and let you choose one to run the app. "
        },
        {
          "name": "--udid <string>",
          "description": "Explicitly set the device to use by UDID"
        },
        {
          "name": "--simulator <string>",
          "description": "Explicitly set the simulator to use. Optionally set the iOS version between parentheses at the end to match an exact version: \"iPhone 15 (17.0)\""
        },
        {
          "name": "--mode <string>",
          "description": "Explicitly set the scheme configuration to use. This option is case sensitive."
        },
        {
          "name": "--scheme <string>",
          "description": "Explicitly set Xcode scheme to use"
        },
        {
          "name": "--destination <string>",
          "description": "Explicitly extend destination e.g. \"arch=x86_64\""
        },
        {
          "name": "--verbose",
          "description": "Do not use xcbeautify or xcpretty even if installed"
        },
        {
          "name": "--xcconfig [string]",
          "description": "Explicitly set xcconfig to use"
        },
        {
          "name": "--buildFolder <string>",
          "description": "Location for iOS build artifacts. Corresponds to Xcode's \"-derivedDataPath\"."
        },
        {
          "name": "--extra-params <string>",
          "description": "Custom params that will be passed to xcodebuild command."
        },
        {
          "name": "--target <string>",
          "description": "Explicitly set Xcode target to use."
        },
        {
          "name": "-i --interactive",
          "description": "Explicitly select which scheme and configuration to use before running a build"
        },
        {
          "name": "--force-pods",
          "description": "Force CocoaPods installation"
        },
        {
          "name": "--device [string]",
          "description": "Explicitly set the device to use by name or by unique device identifier . If the value is not provided,the app will run on the first available physical device."
        }
      ]
    },
    {
      "name": "build-ios",
      "description": "builds your app for iOS platform",
      "examples": [
        {
          "desc": "Build the app for all iOS devices in Release mode",
          "cmd": "npx react-native build-ios --mode \"Release\""
        }
      ],
      "options": [
        {
          "name": "--mode <string>",
          "description": "Explicitly set the scheme configuration to use. This option is case sensitive."
        },
        {
          "name": "--scheme <string>",
          "description": "Explicitly set Xcode scheme to use"
        },
        {
          "name": "--destination <string>",
          "description": "Explicitly extend destination e.g. \"arch=x86_64\""
        },
        {
          "name": "--verbose",
          "description": "Do not use xcbeautify or xcpretty even if installed"
        },
        {
          "name": "--xcconfig [string]",
          "description": "Explicitly set xcconfig to use"
        },
        {
          "name": "--buildFolder <string>",
          "description": "Location for iOS build artifacts. Corresponds to Xcode's \"-derivedDataPath\"."
        },
        {
          "name": "--extra-params <string>",
          "description": "Custom params that will be passed to xcodebuild command."
        },
        {
          "name": "--target <string>",
          "description": "Explicitly set Xcode target to use."
        },
        {
          "name": "-i --interactive",
          "description": "Explicitly select which scheme and configuration to use before running a build"
        },
        {
          "name": "--force-pods",
          "description": "Force CocoaPods installation"
        },
        {
          "name": "--device [string]",
          "description": "Explicitly set the device to use by name or by unique device identifier . If the value is not provided,the app will run on the first available physical device."
        }
      ]
    },
    {
      "name": "log-android",
      "description": "starts logkitty"
    },
    {
      "name": "run-android",
      "description": "builds your app and starts it on a connected Android emulator or device",
      "options": [
        {
          "name": "--mode <string>",
          "description": "Specify your app's build variant"
        },
        {
          "name": "--tasks <list>",
          "description": "Run custom Gradle tasks. By default it's \"assembleDebug\". Will override passed mode and variant arguments."
        },
        {
          "name": "--active-arch-only",
          "description": "Build native libraries only for the current device architecture for debug builds.",
          "default": false
        },
        {
          "name": "--extra-params <string>",
          "description": "Custom params passed to gradle build command"
        },
        {
          "name": "-i --interactive",
          "description": "Explicitly select build type and flavour to use before running a build"
        },
        {
          "name": "--no-packager",
          "description": "Do not launch packager while running the app"
        },
        {
          "name": "--port <number>",
          "default": 8081
        },
        {
          "name": "--terminal <string>",
          "description": "Launches the Metro Bundler in a new window using the specified terminal path.",
          "default": "xterm-256color"
        },
        {
          "name": "--appId <string>",
          "description": "Specify an applicationId to launch after build. If not specified, `package` from AndroidManifest.xml will be used.",
          "default": ""
        },
        {
          "name": "--appIdSuffix <string>",
          "description": "Specify an applicationIdSuffix to launch after build.",
          "default": ""
        },
        {
          "name": "--main-activity <string>",
          "description": "Name of the activity to start"
        },
        {
          "name": "--device <string>",
          "description": "Explicitly set the device to use by name. The value is not required if you have a single device connected."
        },
        {
          "name": "--deviceId <string>",
          "description": "**DEPRECATED** Builds your app and starts it on a specific device/simulator with the given device id (listed by running \"adb devices\" on the command line)."
        },
        {
          "name": "--list-devices",
          "description": "Lists all available Android devices and simulators and let you choose one to run the app",
          "default": false
        },
        {
          "name": "--binary-path <string>",
          "description": "Path relative to project root where pre-built .apk binary lives."
        },
        {
          "name": "--user <number>",
          "description": "Id of the User Profile you want to install the app on."
        }
      ]
    },
    {
      "name": "build-android",
      "description": "builds your app",
      "options": [
        {
          "name": "--mode <string>",
          "description": "Specify your app's build variant"
        },
        {
          "name": "--tasks <list>",
          "description": "Run custom Gradle tasks. By default it's \"assembleDebug\". Will override passed mode and variant arguments."
        },
        {
          "name": "--active-arch-only",
          "description": "Build native libraries only for the current device architecture for debug builds.",
          "default": false
        },
        {
          "name": "--extra-params <string>",
          "description": "Custom params passed to gradle build command"
        },
        {
          "name": "-i --interactive",
          "description": "Explicitly select build type and flavour to use before running a build"
        }
      ]
    }
  ],
  "healthChecks": [],
  "platforms": {
    "ios": {},
    "android": {}
  },
  "assets": [
    "./src/assets/fonts/"
  ],
  "project": {
    "ios": {
      "sourceDir": "/home/praveen/task/Trust_Fresh/ios",
      "xcodeProject": {
        "name": "Trust_Fresh.xcodeproj",
        "path": ".",
        "isWorkspace": false
      },
      "automaticPodsInstallation": false,
      "assets": []
    },
    "android": {
      "sourceDir": "/home/praveen/task/Trust_Fresh/android",
      "appName": "app",
      "packageName": "com.trust_fresh",
      "applicationId": "com.trust_fresh",
      "mainActivity": ".MainActivity",
      "assets": []
    }
  }
}
